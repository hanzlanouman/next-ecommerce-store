"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/truncate";
exports.ids = ["vendor-chunks/truncate"];
exports.modules = {

/***/ "(ssr)/./node_modules/truncate/truncate.js":
/*!*******************************************!*\
  !*** ./node_modules/truncate/truncate.js ***!
  \*******************************************/
/***/ ((module) => {

eval("\n/*global module:true*/ /*jslint nomen:true*/ /**\n * @module Utility\n */ (function(context, undefined) {\n    \"use strict\";\n    var DEFAULT_TRUNCATE_SYMBOL = \"â€¦\", // Limit emails to no more than about 600 chars, well over the max of ~300.\n    // cf. RFC: https://www.rfc-editor.org/errata_search.php?eid=1690\n    URL_REGEX = /(((ftp|https?):\\/\\/)[\\-\\w@:%_\\+.~#?,&\\/\\/=]+)|((mailto:)?[_.\\w-]{1,300}@(.{1,300}\\.)[a-zA-Z]{2,3})/g;\n    function __appendEllipsis(string, options, content) {\n        if (content.length === string.length || !options.ellipsis) {\n            return content;\n        }\n        content += options.ellipsis;\n        return content;\n    }\n    /**\n     * Truncate HTML string and keep tag safe.\n     *\n     * @method truncate\n     * @param {String} string string needs to be truncated\n     * @param {Number} maxLength length of truncated string\n     * @param {Object} options (optional)\n     * @param {Boolean|String} [options.ellipsis] omission symbol for truncated string, '...' by default\n     * @return {String} truncated string\n     */ function truncate(string, maxLength, options) {\n        var content = \"\", matches = true, remainingLength = maxLength, result, index;\n        options = options || {};\n        options.ellipsis = typeof options.ellipsis === \"undefined\" ? DEFAULT_TRUNCATE_SYMBOL : options.ellipsis;\n        if (!string || string.length === 0) {\n            return \"\";\n        }\n        matches = true;\n        while(matches){\n            URL_REGEX.lastIndex = content.length;\n            matches = URL_REGEX.exec(string);\n            // Don't try to retain URLs longer than 3k chars, well over the 99th percentile of ~347\n            if (!matches || matches.index - content.length >= remainingLength || URL_REGEX.lastIndex >= maxLength + 3000) {\n                content += string.substring(content.length, maxLength);\n                return __appendEllipsis(string, options, content, maxLength);\n            }\n            result = matches[0];\n            index = matches.index;\n            content += string.substring(content.length, index + result.length);\n            remainingLength -= index + result.length;\n            if (remainingLength <= 0) {\n                break;\n            }\n        }\n        return __appendEllipsis(string, options, content, maxLength);\n    }\n    if ( true && module.exports) {\n        module.exports = truncate;\n    } else {\n        context.truncate = truncate;\n    }\n})(String);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdHJ1bmNhdGUvdHJ1bmNhdGUuanMiLCJtYXBwaW5ncyI6IjtBQUFBLG9CQUFvQixHQUNwQixtQkFBbUIsR0FDbkI7O0NBRUMsR0FDQSxVQUFVQSxPQUFPLEVBQUVDLFNBQVM7SUFDekI7SUFFQSxJQUFJQywwQkFBMEIsS0FDMUIsMkVBQTJFO0lBQzNFLGlFQUFpRTtJQUNqRUMsWUFBWTtJQUVoQixTQUFTQyxpQkFBaUJDLE1BQU0sRUFBRUMsT0FBTyxFQUFFQyxPQUFPO1FBQzlDLElBQUlBLFFBQVFDLE1BQU0sS0FBS0gsT0FBT0csTUFBTSxJQUFJLENBQUNGLFFBQVFHLFFBQVEsRUFBRTtZQUN2RCxPQUFPRjtRQUNYO1FBQ0FBLFdBQVdELFFBQVFHLFFBQVE7UUFDM0IsT0FBT0Y7SUFDWDtJQUNBOzs7Ozs7Ozs7S0FTQyxHQUNELFNBQVNHLFNBQVNMLE1BQU0sRUFBRU0sU0FBUyxFQUFFTCxPQUFPO1FBQ3hDLElBQUlDLFVBQVUsSUFDVkssVUFBVSxNQUNWQyxrQkFBa0JGLFdBQ2xCRyxRQUNBQztRQUVKVCxVQUFVQSxXQUFXLENBQUM7UUFDdEJBLFFBQVFHLFFBQVEsR0FBRyxPQUFRSCxRQUFRRyxRQUFRLEtBQUssY0FBZVAsMEJBQTBCSSxRQUFRRyxRQUFRO1FBRXpHLElBQUksQ0FBQ0osVUFBVUEsT0FBT0csTUFBTSxLQUFLLEdBQUc7WUFDaEMsT0FBTztRQUNYO1FBRUFJLFVBQVU7UUFDVixNQUFPQSxRQUFTO1lBQ1pULFVBQVVhLFNBQVMsR0FBR1QsUUFBUUMsTUFBTTtZQUNwQ0ksVUFBVVQsVUFBVWMsSUFBSSxDQUFDWjtZQUN6Qix1RkFBdUY7WUFDdkYsSUFBSSxDQUFDTyxXQUFXLFFBQVNHLEtBQUssR0FBR1IsUUFBUUMsTUFBTSxJQUFLSyxtQkFBbUJWLFVBQVVhLFNBQVMsSUFBS0wsWUFBWSxNQUFPO2dCQUM5R0osV0FBV0YsT0FBT2EsU0FBUyxDQUFDWCxRQUFRQyxNQUFNLEVBQUVHO2dCQUM1QyxPQUFPUCxpQkFBaUJDLFFBQVFDLFNBQVNDLFNBQVNJO1lBQ3REO1lBRUFHLFNBQVNGLE9BQU8sQ0FBQyxFQUFFO1lBQ25CRyxRQUFRSCxRQUFRRyxLQUFLO1lBQ3JCUixXQUFXRixPQUFPYSxTQUFTLENBQUNYLFFBQVFDLE1BQU0sRUFBRU8sUUFBUUQsT0FBT04sTUFBTTtZQUNqRUssbUJBQW1CRSxRQUFRRCxPQUFPTixNQUFNO1lBRXhDLElBQUlLLG1CQUFtQixHQUFHO2dCQUN0QjtZQUNKO1FBQ0o7UUFFQSxPQUFPVCxpQkFBaUJDLFFBQVFDLFNBQVNDLFNBQVNJO0lBQ3REO0lBRUEsSUFBSSxLQUE2QlEsSUFBSUEsT0FBT0MsT0FBTyxFQUFFO1FBQ2pERCxPQUFPQyxPQUFPLEdBQUdWO0lBQ3JCLE9BQU87UUFDSFYsUUFBUVUsUUFBUSxHQUFHQTtJQUN2QjtBQUNKLEdBQUVXIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1lY29tbS8uL25vZGVfbW9kdWxlcy90cnVuY2F0ZS90cnVuY2F0ZS5qcz84ZjMyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qZ2xvYmFsIG1vZHVsZTp0cnVlKi9cbi8qanNsaW50IG5vbWVuOnRydWUqL1xuLyoqXG4gKiBAbW9kdWxlIFV0aWxpdHlcbiAqL1xuKGZ1bmN0aW9uIChjb250ZXh0LCB1bmRlZmluZWQpIHtcbiAgICAndXNlIHN0cmljdCc7XG5cbiAgICB2YXIgREVGQVVMVF9UUlVOQ0FURV9TWU1CT0wgPSAn4oCmJyxcbiAgICAgICAgLy8gTGltaXQgZW1haWxzIHRvIG5vIG1vcmUgdGhhbiBhYm91dCA2MDAgY2hhcnMsIHdlbGwgb3ZlciB0aGUgbWF4IG9mIH4zMDAuXG4gICAgICAgIC8vIGNmLiBSRkM6IGh0dHBzOi8vd3d3LnJmYy1lZGl0b3Iub3JnL2VycmF0YV9zZWFyY2gucGhwP2VpZD0xNjkwXG4gICAgICAgIFVSTF9SRUdFWCA9IC8oKChmdHB8aHR0cHM/KTpcXC9cXC8pW1xcLVxcd0A6JV9cXCsufiM/LCZcXC9cXC89XSspfCgobWFpbHRvOik/W18uXFx3LV17MSwzMDB9QCguezEsMzAwfVxcLilbYS16QS1aXXsyLDN9KS9nO1xuXG4gICAgZnVuY3Rpb24gX19hcHBlbmRFbGxpcHNpcyhzdHJpbmcsIG9wdGlvbnMsIGNvbnRlbnQpIHtcbiAgICAgICAgaWYgKGNvbnRlbnQubGVuZ3RoID09PSBzdHJpbmcubGVuZ3RoIHx8ICFvcHRpb25zLmVsbGlwc2lzKSB7XG4gICAgICAgICAgICByZXR1cm4gY29udGVudDtcbiAgICAgICAgfVxuICAgICAgICBjb250ZW50ICs9IG9wdGlvbnMuZWxsaXBzaXM7XG4gICAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBUcnVuY2F0ZSBIVE1MIHN0cmluZyBhbmQga2VlcCB0YWcgc2FmZS5cbiAgICAgKlxuICAgICAqIEBtZXRob2QgdHJ1bmNhdGVcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gc3RyaW5nIHN0cmluZyBuZWVkcyB0byBiZSB0cnVuY2F0ZWRcbiAgICAgKiBAcGFyYW0ge051bWJlcn0gbWF4TGVuZ3RoIGxlbmd0aCBvZiB0cnVuY2F0ZWQgc3RyaW5nXG4gICAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMgKG9wdGlvbmFsKVxuICAgICAqIEBwYXJhbSB7Qm9vbGVhbnxTdHJpbmd9IFtvcHRpb25zLmVsbGlwc2lzXSBvbWlzc2lvbiBzeW1ib2wgZm9yIHRydW5jYXRlZCBzdHJpbmcsICcuLi4nIGJ5IGRlZmF1bHRcbiAgICAgKiBAcmV0dXJuIHtTdHJpbmd9IHRydW5jYXRlZCBzdHJpbmdcbiAgICAgKi9cbiAgICBmdW5jdGlvbiB0cnVuY2F0ZShzdHJpbmcsIG1heExlbmd0aCwgb3B0aW9ucykge1xuICAgICAgICB2YXIgY29udGVudCA9ICcnLCAvLyB0cnVuY2F0ZWQgdGV4dCBzdG9yYWdlXG4gICAgICAgICAgICBtYXRjaGVzID0gdHJ1ZSxcbiAgICAgICAgICAgIHJlbWFpbmluZ0xlbmd0aCA9IG1heExlbmd0aCxcbiAgICAgICAgICAgIHJlc3VsdCxcbiAgICAgICAgICAgIGluZGV4O1xuXG4gICAgICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICAgICAgICBvcHRpb25zLmVsbGlwc2lzID0gKHR5cGVvZiBvcHRpb25zLmVsbGlwc2lzID09PSBcInVuZGVmaW5lZFwiKSA/IERFRkFVTFRfVFJVTkNBVEVfU1lNQk9MIDogb3B0aW9ucy5lbGxpcHNpcztcblxuICAgICAgICBpZiAoIXN0cmluZyB8fCBzdHJpbmcubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gJyc7XG4gICAgICAgIH1cblxuICAgICAgICBtYXRjaGVzID0gdHJ1ZTtcbiAgICAgICAgd2hpbGUgKG1hdGNoZXMpIHtcbiAgICAgICAgICAgIFVSTF9SRUdFWC5sYXN0SW5kZXggPSBjb250ZW50Lmxlbmd0aDtcbiAgICAgICAgICAgIG1hdGNoZXMgPSBVUkxfUkVHRVguZXhlYyhzdHJpbmcpO1xuICAgICAgICAgICAgLy8gRG9uJ3QgdHJ5IHRvIHJldGFpbiBVUkxzIGxvbmdlciB0aGFuIDNrIGNoYXJzLCB3ZWxsIG92ZXIgdGhlIDk5dGggcGVyY2VudGlsZSBvZiB+MzQ3XG4gICAgICAgICAgICBpZiAoIW1hdGNoZXMgfHwgKG1hdGNoZXMuaW5kZXggLSBjb250ZW50Lmxlbmd0aCkgPj0gcmVtYWluaW5nTGVuZ3RoIHx8IFVSTF9SRUdFWC5sYXN0SW5kZXggPj0gKG1heExlbmd0aCArIDMwMDApKSB7XG4gICAgICAgICAgICAgICAgY29udGVudCArPSBzdHJpbmcuc3Vic3RyaW5nKGNvbnRlbnQubGVuZ3RoLCBtYXhMZW5ndGgpO1xuICAgICAgICAgICAgICAgIHJldHVybiBfX2FwcGVuZEVsbGlwc2lzKHN0cmluZywgb3B0aW9ucywgY29udGVudCwgbWF4TGVuZ3RoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmVzdWx0ID0gbWF0Y2hlc1swXTtcbiAgICAgICAgICAgIGluZGV4ID0gbWF0Y2hlcy5pbmRleDtcbiAgICAgICAgICAgIGNvbnRlbnQgKz0gc3RyaW5nLnN1YnN0cmluZyhjb250ZW50Lmxlbmd0aCwgaW5kZXggKyByZXN1bHQubGVuZ3RoKTtcbiAgICAgICAgICAgIHJlbWFpbmluZ0xlbmd0aCAtPSBpbmRleCArIHJlc3VsdC5sZW5ndGg7XG5cbiAgICAgICAgICAgIGlmIChyZW1haW5pbmdMZW5ndGggPD0gMCkge1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIF9fYXBwZW5kRWxsaXBzaXMoc3RyaW5nLCBvcHRpb25zLCBjb250ZW50LCBtYXhMZW5ndGgpO1xuICAgIH1cblxuICAgIGlmICgndW5kZWZpbmVkJyAhPT0gdHlwZW9mIG1vZHVsZSAmJiBtb2R1bGUuZXhwb3J0cykge1xuICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IHRydW5jYXRlO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnRleHQudHJ1bmNhdGUgPSB0cnVuY2F0ZTtcbiAgICB9XG59KFN0cmluZykpO1xuIl0sIm5hbWVzIjpbImNvbnRleHQiLCJ1bmRlZmluZWQiLCJERUZBVUxUX1RSVU5DQVRFX1NZTUJPTCIsIlVSTF9SRUdFWCIsIl9fYXBwZW5kRWxsaXBzaXMiLCJzdHJpbmciLCJvcHRpb25zIiwiY29udGVudCIsImxlbmd0aCIsImVsbGlwc2lzIiwidHJ1bmNhdGUiLCJtYXhMZW5ndGgiLCJtYXRjaGVzIiwicmVtYWluaW5nTGVuZ3RoIiwicmVzdWx0IiwiaW5kZXgiLCJsYXN0SW5kZXgiLCJleGVjIiwic3Vic3RyaW5nIiwibW9kdWxlIiwiZXhwb3J0cyIsIlN0cmluZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/truncate/truncate.js\n");

/***/ })

};
;